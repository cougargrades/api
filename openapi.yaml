openapi: "3.0.0"
info:
  version: 1.1.0
  title: "@cougargrades/api"
  description: "Public HTTP API for cougargrades.io. <br>See more at: https://github.com/cougargrades/api"
  license:
    name: MIT
servers:
  - url: https://cougargrades.io/api
paths:
  /hello:
    get:
      summary: An example route used for testing
      responses:
        '200':
          description: Responds with `"world!"`
  /catalog:
    get:
      summary: Query against the course database
      description: When provided with only the `department` parameter, this will return the available courses that this department has offerred. When provided both `department` and `catalogNumber` parameter, the course object is returned with its `sections` property populated.
      parameters:
        - name: department
          in: query
          description: "Department code to query with (Ex: `MATH`, `ENGL`)"
          required: true
          schema:
            type: string
        - name: catalogNumber
          in: query
          description: "Catlog number to query with (Ex: `2331`, `1304`)"
          required: false
          schema:
            type: string
      responses:
        '200':
          description: When provided both `department` and `catalogNumber` parameter, the course object is returned with its `sections` property populated. 
          content: 
            application/json:
              schema: 
                type: array
                items:
                  $ref: '#/components/schemas/Course'
        '206':
          description: When provided with only the `department` parameter, this will return the available courses that this department has offerred.
          content: 
            application/json:
              schema: 
                type: array
                items:
                  $ref: '#/components/schemas/ShallowCourse'
        '460':
          description: "Course not found: A course with those arguments could not be found"
        '461':
          description: "Department not found: A department with those arguments could not be found"
        '462':
          description: "Insufficient arguments: Please include at least a `department` query parameter."
        '500':
          description: "Internal Server Error: The server has encountered a situation it doesn't know how to handle."
  /instructors:
    get:
      summary: Query against the instructors database
      description: When provided with only the `fullName` parameter, this will return the corresponding instructor by that name. When provided the `query` parameter, a list of up to 10 ShallowInstructors will be returned (this list may have zero entries).
      parameters:
        - name: fullName
          in: query
          description: "Instructor's `fullName` property to reference by (case-sensitive)."
          required: false
          schema:
            type: string
        - name: query
          in: query
          description: "A term to search against all names (case-insensitive)."
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful response for the request for an individual instructor, provided the `fullName` parameter.
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Instructor'
        '206':
          description: Successful response for the search term against all instructors by name, provided the `query` parameter. Response array may not have entries.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShallowInstructor'

components:
  schemas:
    ShallowCourse:
      type: object
      properties:
        department:
          type: string
          default: "COSC"
        catalogNumber:
          type: string
          default: "1304"
        description:
          type: string
          default: "C Programming"
        sectionCount:
          type: integer
          default: "159"
        GPA:
          $ref: '#/components/schemas/GPA'
    Course:
      type: object
      properties:
        department:
          type: string
          default: "COSC"
        catalogNumber:
          type: string
          default: "1304"
        description:
          type: string
          default: "C Programming"
        sectionCount:
          type: integer
          default: "159"
        GPA:
          $ref: '#/components/schemas/GPA'
        sections:
          type: array
          items:
            $ref: '#/components/schemas/Section'
    Section:
      type: object
      properties:
        A:
          type: integer
          description: Number of As graded
        B:
          type: integer
          description: Number of Bs graded
        C:
          type: integer
          description: Number of Cs graded
        D:
          type: integer
          description: Number of Ds graded
        F:
          type: integer
          description: Number of Fs graded
        Q:
          type: integer
          description: Number of students that withdrew from the course
        sectionNumber:
          type: integer
          description: The section number of the lecture/graded/primary portion of the course (some lab sections are excluded).
        semesterGPA:
          type: number
          description: Average GPA for the class for the semester
        term:
          type: integer
          description: "Term code in the format: XXXXYY, where XXXX is the year, 01 is Spring, 02 is Summer, and 03 is Fall. <br>Example: 201803 -> Fall 2018"
        termString:
          type: string
          description: "User-friendly form of the term/semester name. Example: Fall 2018"
        instructorNames:
          type: array
          items:
            $ref: '#/components/schemas/ShallowTermInstructor'
    ShallowTermInstructor:
      type: object
      properties:
        lastName:
          type: string
        firstName:
          type: string
        termSectionsTaught:
          type: integer
          description: Number of sections this instructor taught of this same course of this same term
        termGPA:
          type: number
          description: Average GPA of all this instructor's sections, if they taught multiple
        termGPAmax:
          type: number
          description: Maximum per-section GPA of all this instructor's sections, if they taught multiple
        termGPAmin:
          type: number
          description: Minimum per-section GPA of all this instructor's sections, if they taught multiple
    ShallowInstructor:
      type: object
      properties:
        firstName:
          type: string
          default: "Robert"
        lastName:
          type: string
          default: "Buzzanco"
        fullName:
          type: string
          default: "Robert Buzzanco"
        sections_count:
          type: integer
          default: 57
        courses_count:
          type: integer
          default: 10
        GPA:
          $ref: '#/components/schemas/GPA'
    Instructor:
      type: object
      properties:
        firstName:
          type: string
          default: "Robert"
        lastName:
          type: string
          default: "Buzzanco"
        fullName:
          type: string
          default: "Robert Buzzanco"
        sections_count:
          type: integer
          default: 57
        courses_count:
          type: integer
          default: 10
        courses:
          type: array
          items:
            $ref: '#/components/schemas/ShallowCourse'
        sections:
          type: array
          items:
            $ref: '#/components/schemas/Section'
        GPA:
          $ref: '#/components/schemas/GPA'
    GPA:
      type: object
      properties:
        average:
          type: number
          default: 3.4697
        maximum:
          type: number
          default: 3.914
        median:
          type: number
          default: 3.59625
        minimum:
          type: number
          default: 2.593
        range:
          type: number
          default: 1.3210000000000002
        standardDeviation:
          type: number
          default: 0.33374125380269654